@model AirlineManagementSystem.Models.Reservation
 
 @{
     ViewBag.Title = "Edit";
}

<h3>Edit Reservation</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            @*<h4>Reservation</h4>*@
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ReservationId)
            @Html.HiddenFor(model => model.CreatedByUserId)
            @Html.HiddenFor(model => model.CreatedOnDate)
            @Html.HiddenFor(model => model.IsDeleted)
    
            <div class="form-group">
                @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateFrom, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateTo, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.FlighType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FlighType, Enum.GetValues(typeof(AirlineManagementSystem.Models.FType)).Cast<AirlineManagementSystem.Models.FType>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }), "Select Type", new { @class = "form-control" })
                    
                    @Html.ValidationMessageFor(model => model.FlighType, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.NoChildren, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.NoChildren, Enum.GetValues(typeof(AirlineManagementSystem.Models.NoChildren)).Cast<AirlineManagementSystem.Models.NoChildren>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }), "Select No.", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NoChildren, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                    <a href='@Url.Action("Index", "Reservations")' class="btn btn-primary">Back</a>
                </div>
            </div>
        </div>
    } 